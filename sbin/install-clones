#!/usr/bin/env bash
cd "$(dirname "$0")/../"

set -eu


USER='oliver-sanders'


CYLC_REPOS=(
    cylc-admin
    cylc-dev-tools
    cylc-doc
    cylc-examples
    cylc-flow
    cylc-graphic-design
    cylc-sphinx-extensions
    cylc-ui
    cylc-uiserver
    cylc-xtriggers
    cylc.github.io
    isodatetime
    presentations
    release-actions
    rose
)


METOMI_REPOS=(
    exvcylc-monitor
    metomi-mo
    metomi-docs
)


UPSTREAMS=(
    cylc
    metomi
)


declare -A USERS
USERS=(
    [mel]=datamel
    [dave]=dpmatthews
    [david]=dwsutherland
    [hillary]=hjoliver
    [bruno]=kinow
    [ronnie]=metronnie
    [tim]=wxtim
)


set-upstream () {
    local REPO="$1"
    local REPO_DIR="${HOME}/${REPO}"
    local set_upstream=''

    # configure upstream
    if git -C "${REPO_DIR}" remote -v | grep -q upstream; then
        return  # upstream already set -> skip
    fi

    # handle private repos
    for metomi_repo in "${METOMI_REPOS[@]}"; do
        if [[ "$repo" == "$metomi_repo" ]]; then
            set_upstream=MetOffice
            break
        fi
    done

    # scan available upstreams
    if [[ -n "$set_upstream" ]]; then
        for upstream in "${UPSTREAMS[@]}"; do
            if curl --fail "https://github.com/${upstream}/${REPO}" >/dev/null 2>&1;
            then
                set_upstream="$upstream"
                break
            fi
        done
    fi

    if [[ -n "$set_upstream" ]]; then
        git -C "${REPO_DIR}" remote add \
            upstream \
            "git@github.com:${set_upstream}/${REPO}.git"
    fi
}


set-remotes () {
    REPO="$1"
    REPO_DIR="${HOME}/${REPO}"
    for name in "${!USERS[@]}"; do
        user="${USERS[$name]}"
        git -C "${REPO_DIR}" remote add \
            "${name}" \
            "https://github.com/${user}/${REPO}" \
            2>/dev/null \
            || true
    done
}


install-cylc () {
    for repo in "${CYLC_REPOS[@]}"; do
        install-repo "$repo"
    done
}


install-metomi () {
    for repo in "${METOMI_REPOS[@]}"; do
        install-repo "$repo"
    done 
}


install-repo() {
    REPO="$1"
    REPO_DIR="${HOME}/${REPO}"
    if ! [[ -d "${REPO_DIR}" ]]; then
        git clone "git@github.com:${USER}/${REPO}.git" "${REPO_DIR}"
    fi
    configure-repo "$REPO"
}


configure-repo() {
    REPO="$1"
    git -C "${HOME}/${REPO}" init  # pick up changes to templatedir
    set-upstream "${REPO}"
    set-remotes "${REPO}"
}


install-all () {
    install cylc
    install metomi
}

install () {
    for arg in $@; do
        echo "# conda: install - ${arg}"
        "install-${arg}"
    done
}

$@
